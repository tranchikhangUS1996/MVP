// Generated by Dagger (https://google.github.io/dagger).
package com.example.lap60020_local.retrofit;

import com.example.lap60020_local.retrofit.Presenter.IsearchPresenter;
import com.example.lap60020_local.retrofit.Presenter.mIPresenter;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class MyApplication_MembersInjector implements MembersInjector<MyApplication> {
  private final Provider<mIPresenter> popularPresenterProvider;

  private final Provider<mIPresenter> topRatedPresenterProvider;

  private final Provider<mIPresenter> nowPlayingPresenterProvider;

  private final Provider<mIPresenter> upCommingPresenterProvider;

  private final Provider<IsearchPresenter> searchPresenterProvider;

  public MyApplication_MembersInjector(
      Provider<mIPresenter> popularPresenterProvider,
      Provider<mIPresenter> topRatedPresenterProvider,
      Provider<mIPresenter> nowPlayingPresenterProvider,
      Provider<mIPresenter> upCommingPresenterProvider,
      Provider<IsearchPresenter> searchPresenterProvider) {
    this.popularPresenterProvider = popularPresenterProvider;
    this.topRatedPresenterProvider = topRatedPresenterProvider;
    this.nowPlayingPresenterProvider = nowPlayingPresenterProvider;
    this.upCommingPresenterProvider = upCommingPresenterProvider;
    this.searchPresenterProvider = searchPresenterProvider;
  }

  public static MembersInjector<MyApplication> create(
      Provider<mIPresenter> popularPresenterProvider,
      Provider<mIPresenter> topRatedPresenterProvider,
      Provider<mIPresenter> nowPlayingPresenterProvider,
      Provider<mIPresenter> upCommingPresenterProvider,
      Provider<IsearchPresenter> searchPresenterProvider) {
    return new MyApplication_MembersInjector(
        popularPresenterProvider,
        topRatedPresenterProvider,
        nowPlayingPresenterProvider,
        upCommingPresenterProvider,
        searchPresenterProvider);
  }

  @Override
  public void injectMembers(MyApplication instance) {
    injectPopularPresenter(instance, popularPresenterProvider.get());
    injectTopRatedPresenter(instance, topRatedPresenterProvider.get());
    injectNowPlayingPresenter(instance, nowPlayingPresenterProvider.get());
    injectUpCommingPresenter(instance, upCommingPresenterProvider.get());
    injectSearchPresenter(instance, searchPresenterProvider.get());
  }

  public static void injectPopularPresenter(MyApplication instance, mIPresenter PopularPresenter) {
    instance.PopularPresenter = PopularPresenter;
  }

  public static void injectTopRatedPresenter(
      MyApplication instance, mIPresenter TopRatedPresenter) {
    instance.TopRatedPresenter = TopRatedPresenter;
  }

  public static void injectNowPlayingPresenter(
      MyApplication instance, mIPresenter NowPlayingPresenter) {
    instance.NowPlayingPresenter = NowPlayingPresenter;
  }

  public static void injectUpCommingPresenter(
      MyApplication instance, mIPresenter UpCommingPresenter) {
    instance.UpCommingPresenter = UpCommingPresenter;
  }

  public static void injectSearchPresenter(
      MyApplication instance, IsearchPresenter SearchPresenter) {
    instance.SearchPresenter = SearchPresenter;
  }
}
