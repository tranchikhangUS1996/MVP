// Generated by Dagger (https://google.github.io/dagger).
package com.example.lap60020_local.retrofit.DI.Module;

import com.example.lap60020_local.retrofit.Loader.SearchLoader;
import com.example.lap60020_local.retrofit.Model.ISearchModel;
import com.example.lap60020_local.retrofit.Presenter.IsearchPresenter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class MyAdapterModule_ProvideSearchPresenterFactory
    implements Factory<IsearchPresenter> {
  private final MyAdapterModule module;

  private final Provider<SearchLoader> searchLoaderProvider;

  private final Provider<ISearchModel> modelProvider;

  public MyAdapterModule_ProvideSearchPresenterFactory(
      MyAdapterModule module,
      Provider<SearchLoader> searchLoaderProvider,
      Provider<ISearchModel> modelProvider) {
    this.module = module;
    this.searchLoaderProvider = searchLoaderProvider;
    this.modelProvider = modelProvider;
  }

  @Override
  public IsearchPresenter get() {
    return provideInstance(module, searchLoaderProvider, modelProvider);
  }

  public static IsearchPresenter provideInstance(
      MyAdapterModule module,
      Provider<SearchLoader> searchLoaderProvider,
      Provider<ISearchModel> modelProvider) {
    return proxyProvideSearchPresenter(module, searchLoaderProvider.get(), modelProvider.get());
  }

  public static MyAdapterModule_ProvideSearchPresenterFactory create(
      MyAdapterModule module,
      Provider<SearchLoader> searchLoaderProvider,
      Provider<ISearchModel> modelProvider) {
    return new MyAdapterModule_ProvideSearchPresenterFactory(
        module, searchLoaderProvider, modelProvider);
  }

  public static IsearchPresenter proxyProvideSearchPresenter(
      MyAdapterModule instance, SearchLoader searchLoader, ISearchModel model) {
    return Preconditions.checkNotNull(
        instance.provideSearchPresenter(searchLoader, model),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
