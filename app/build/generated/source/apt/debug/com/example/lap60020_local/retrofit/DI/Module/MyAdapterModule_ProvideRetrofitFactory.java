// Generated by Dagger (https://google.github.io/dagger).
package com.example.lap60020_local.retrofit.DI.Module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.Retrofit;

public final class MyAdapterModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final MyAdapterModule module;

  public MyAdapterModule_ProvideRetrofitFactory(MyAdapterModule module) {
    this.module = module;
  }

  @Override
  public Retrofit get() {
    return provideInstance(module);
  }

  public static Retrofit provideInstance(MyAdapterModule module) {
    return proxyProvideRetrofit(module);
  }

  public static MyAdapterModule_ProvideRetrofitFactory create(MyAdapterModule module) {
    return new MyAdapterModule_ProvideRetrofitFactory(module);
  }

  public static Retrofit proxyProvideRetrofit(MyAdapterModule instance) {
    return Preconditions.checkNotNull(
        instance.provideRetrofit(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
